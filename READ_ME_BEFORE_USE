
			          TOPOLOGY VIOLATION ANALYSIS
				    tv_counting 2.1 program
				       Rangsiman Ketkaew
				          14 May 2017
				 	 
                       https://github.com/rangsimanketkaew/tv_counting/
			
     tv_counting is an automated python program for topology violation analysis, writen in
 python 2.7 by Rangsiman Ketkaew (BSc student in Chemistry) at Department of Chemistry 
 Facultyof Science and Technology, Thammasat University, Pathum Thani, 12120 Thailand.
 
 ===============
 | tv_counting |
 ===============
     tv_counting, written in python 2.7, is a program for computing the number of chain 
 crossing between polymer chains - topology violation of polymeric system - in multi-scale 
 simulation. tv_counting can be used as a post-analysis with molecular dynamics program 
 such as Gromacs, Amber, and LAMMPS.

 =========================
 | Coarse-graining model |
 =========================
    Coarse-grained (CG) modelling is one of the meso-scale simulation technique that widely 
 used in computational chemistry and biology. A concept of CG is reduction of the degree of 
 freedom in simulated system by replacing atoms in molecule by a chunk called bead. 
 CG modelling yeilds the resolution of simulation at larger time and scale. More details of 
 CG modelling can be found at (https://en.wikipedia.org/wiki/Coarse-grained_modeling). 
 This model is a promising technique that many computational chemists has waited. 
 It can be said that CG is faster than a classical molecular dynamics (MD) simulation, 
 and still provides the accurate and reasonable results compared to experiments.   
 
 ===========
 | Caveats |
 ===========
   (1) tv_counting should be run on LINUX OS, such as CentOS or Ubuntu and must be run with 
       Python 2.6 or 2.7. If you run tv_counting on Cygwin LINUX-like terminal for Window OS,
       Computation can consume a lot of PC/laptop power.
   (2) I suggest you to run the tv_count.py program in serial first in order to benchmark the
       computational performance of program on your machine before running the real system.
       If serial run is too slow, then you can switch to use MPI for parallel run.

 =================
 | Program Usage |
 =================
   Step by step of how to use the remove_nLine and tv_counting.
 
   => 0 <=
   Preparing XYZ coordinate files:
   Use the script 'remove_nLine.sh' for converting the format of coordinate file to the new 
   format that suitable with tv_count script.
      $ ./remove_nLine.sh
      
   => 1 <=
   Excute script using command following:
      $ chmod 755 tv_script.py
   or
      $ chmod +x tv_script.py

   => 2 <=
   Store the input file (coor.xyz) at the same place of script.py 
      $ mv file destination_folder (move file to any folder)

   => 3 <=
   Rename coordinate files to format of "step*.txt"
      $ mv file1 file2
   eventually, you should have successive files like this on your folder
   step0.txt step1.txt step2.txt step3.txt ... and so forth
	
   => 4 <=
   Run script using the following commands
      $ ./tv_script &
   or
      $ nohup ./tv_script.sh &
   or
      $ nohup sh tv_script.sh &

   Note that '&' is needed to force program run in background.
 
   Enjoy your calculation.
 
   Rangsiman Ketkaew
    < E-mail: rangsiman1993@gmail.com
      CCRU, Department of Chemistry
      Faculty of Science and Technology
      Thammasat University, 12120 Thailand >
      
